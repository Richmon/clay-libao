// Automatically generated by clay-bindgen
// language: c

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


alias uint_8 = CUChar;

alias uint_16 = UShort;

alias uint_32 = UInt;

alias sint_8 = CChar;

alias sint_16 = Short;

alias sint_32 = Int;

record Struct_ao_info (
    type : Int,
    name : Pointer[CChar],
    short_name : Pointer[CChar],
    author : Pointer[CChar],
    comment : Pointer[CChar],
    preferred_byte_format : Int,
    priority : Int,
    options : Pointer[Pointer[CChar]],
    option_count : Int,
);

alias ao_info = Struct_ao_info;

alias ao_functions = Opaque;

alias ao_device = Opaque;

record Struct_ao_sample_format (
    bits : Int,
    rate : Int,
    channels : Int,
    byte_format : Int,
    matrix : Pointer[CChar],
);

alias ao_sample_format = Struct_ao_sample_format;

record Struct_ao_option (
    key : Pointer[CChar],
    value : Pointer[CChar],
    next : Pointer[Struct_ao_option],
);

alias ao_option = Struct_ao_option;

external ao_initialize();

external ao_shutdown();

external ao_append_global_option(
    key : Pointer[CChar],
    value : Pointer[CChar]) Int;

external ao_append_option(
    options : Pointer[Pointer[ao_option]],
    key : Pointer[CChar],
    value : Pointer[CChar]) Int;

external ao_free_options(
    options : Pointer[ao_option]);

external ao_open_live(
    driver_id : Int,
    format : Pointer[ao_sample_format],
    option : Pointer[ao_option]) Pointer[ao_device];

external ao_open_file(
    driver_id : Int,
    filename : Pointer[CChar],
    overwrite : Int,
    format : Pointer[ao_sample_format],
    option : Pointer[ao_option]) Pointer[ao_device];

external ao_play(
    device : Pointer[ao_device],
    output_samples : Pointer[CChar],
    num_bytes : UInt) Int;

external ao_close(
    device : Pointer[ao_device]) Int;

external ao_driver_id(
    short_name : Pointer[CChar]) Int;

external ao_default_driver_id() Int;

external ao_driver_info(
    driver_id : Int) Pointer[ao_info];

external ao_driver_info_list(
    driver_count : Pointer[Int]) Pointer[Pointer[ao_info]];

external ao_file_extension(
    driver_id : Int) Pointer[CChar];

external ao_is_big_endian() Int;
